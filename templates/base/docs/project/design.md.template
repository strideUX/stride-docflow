# <!-- DYNAMIC: [Project Name] --> - Design & UI Guidelines

<!-- STATIC -->
## Overview
This document establishes UI/UX consistency standards and design patterns for the project. It ensures coherent user experience and efficient development through established design systems.

<!-- DYNAMIC: [Brief description of the design approach and key design principles for this project] -->

---

<!-- STATIC -->
## Design System

<!-- STATIC -->
### Component Library
<!-- DYNAMIC: [Chosen component library (e.g., shadcn/ui, Chakra UI, etc.) with version and key characteristics] -->

<!-- STATIC -->
### Design Tokens
<!-- DYNAMIC: [Color palette, typography scale, spacing system, and other design tokens] -->

```css
/* <!-- DYNAMIC: [Example of key design tokens/CSS variables] --> */
```

<!-- STATIC -->
### Theming Approach
<!-- DYNAMIC: [How themes are implemented, dark/light mode strategy, and customization approach] -->

---

<!-- STATIC -->
## Layout & Navigation

<!-- STATIC -->
### Layout Patterns
<!-- DYNAMIC: [Primary layout structure, responsive behavior, and layout consistency rules] -->

<!-- STATIC -->
### Navigation Design
<!-- DYNAMIC: [Navigation patterns, menu structures, and wayfinding approach] -->

<!-- STATIC -->
### Responsive Strategy
<!-- DYNAMIC: [Breakpoints, mobile-first vs desktop-first approach, and responsive patterns] -->

---

<!-- STATIC -->
## Component Patterns

<!-- STATIC -->
### Pattern-First Development
<!-- STATIC -->
- **ALWAYS analyze existing similar components before creating new ones**
- **NEVER create custom components when established patterns exist**
- **BEFORE writing code: identify 2-3 reference components with similar functionality**
- **Match exact usage patterns, styling, and structure from reference components**

<!-- STATIC -->
### Component Consistency Rules
<!-- STATIC -->
- Use established component library consistently (don't mix libraries)
- Follow existing color schemes and typography patterns
- Maintain consistent spacing and layout patterns
- Reuse existing components rather than creating custom ones

<!-- STATIC -->
### Implementation Workflow
<!-- STATIC -->
1. **Pattern Analysis**: Find similar existing components
2. **Structure Copy**: Use exact patterns from reference components
3. **Component Reuse**: Use same components as reference implementations
4. **Style Consistency**: Match existing styling patterns
5. **Integration**: Follow established integration patterns

<!-- STATIC -->
### Red Flags (STOP and Ask)
<!-- STATIC -->
- Creating custom components when similar components exist
- Using different component libraries than existing code
- Inventing new styling patterns
- Creating new layout structures without clear precedent
- Modifying working patterns without explicit instruction

<!-- STATIC -->
### Component Categories
<!-- DYNAMIC: [List of component categories being used (forms, navigation, data display, etc.) with examples] -->

---

<!-- STATIC -->
## User Experience Patterns

<!-- STATIC -->
### User Flows
<!-- DYNAMIC: [Key user flows and how they should be implemented consistently] -->

<!-- STATIC -->
### Interaction Patterns
<!-- DYNAMIC: [Common interactions, micro-interactions, and feedback patterns] -->

<!-- STATIC -->
### Error Handling
<!-- DYNAMIC: [How errors are displayed, validation patterns, and user feedback approaches] -->

<!-- STATIC -->
### Loading States
<!-- DYNAMIC: [Loading indicators, skeleton screens, and progressive loading patterns] -->

---

<!-- STATIC -->
## Content & Communication

<!-- STATIC -->
### Content Strategy
<!-- DYNAMIC: [Tone of voice, content guidelines, and messaging consistency] -->

<!-- STATIC -->
### Iconography
<!-- DYNAMIC: [Icon system, icon library choice, and usage guidelines] -->

<!-- STATIC -->
### Typography
<!-- DYNAMIC: [Font choices, hierarchy, and text treatment patterns] -->

---

<!-- STATIC -->
## Accessibility & Usability

<!-- STATIC -->
### Accessibility Standards
<!-- DYNAMIC: [WCAG compliance level, accessibility testing approach, and key considerations] -->

<!-- STATIC -->
### Usability Guidelines
<!-- DYNAMIC: [Key usability principles and testing approaches for this project] -->

---

<!-- STATIC -->
## Quality Assurance

<!-- STATIC -->
### Design Review Checklist
<!-- STATIC -->
- [ ] New components match existing similar components
- [ ] Component usage consistent with established patterns
- [ ] Styling follows existing color/typography schemes
- [ ] Layout integration matches established patterns
- [ ] Responsive behavior consistent with project standards
- [ ] Accessibility requirements met
- [ ] No custom patterns created without justification

<!-- STATIC -->
### Browser & Device Testing
<!-- DYNAMIC: [Supported browsers, device testing strategy, and quality standards] -->

---

<!-- STATIC -->
## Resources & References

<!-- STATIC -->
### Design Files
<!-- DYNAMIC: [Links to Figma files, design mockups, or other design resources] -->

<!-- STATIC -->
### Component Documentation
<!-- DYNAMIC: [Links to component library documentation and usage examples] -->

<!-- STATIC -->
### Design Inspiration
<!-- DYNAMIC: [Reference designs, inspiration sources, or style guides that influenced this project] -->

---

<!-- STATIC -->
*This document should be updated when design patterns evolve or new component patterns are established. Always prioritize consistency over innovation unless explicitly required.*