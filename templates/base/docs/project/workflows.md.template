# Project Workflows & Protocols

## CaptureNote Protocol

### Purpose
Systematic capture of significant decisions, scope changes, and insights during active development work for {{projectName}}.

### When to Capture Notes (AI Should Proactively Identify)
- **DECISION RECORD**: Major architectural, technical, or strategic decisions are made
- **SCOPE CHANGE**: Project scope, timeline, or feature modifications occur
- **INSIGHT**: Important design discoveries or realizations emerge  
- **CHANGE**: Structural, process, or workflow modifications happen
- **NOTE**: Important context, observations, or external factors arise
- **BLOCKER**: Issues preventing progress are identified
- **MILESTONE**: Major completions or achievements occur

### CaptureNote Process

#### 1. Automatic Triggers
AI should recognize and capture when:
- User makes architectural or technology decisions
- Project scope or requirements change during discussion
- Important design patterns or insights are discovered
- File structures or processes are modified
- External blockers or dependencies are identified

#### 2. Daily File Management
- **Daily Pattern**: One file per day using format `/docflow/notes/YYYY-MM-DD.md`
- **If Today's File Exists**: Append new timestamped section to existing file
- **If Today's File Missing**: Create new file with session overview header and first entry
- **Historical Files**: Never modify previous days' files - each day is preserved as historical record
- **File Structure**: Each daily file should have session overview at top, then chronological timestamped entries

#### 3. Standard Entry Format
```markdown
## HH:MM - ENTRY_TYPE: Brief Description
**Type:** [Category/Impact Area]
**Impact:** [High/Medium/Low] - [Area of impact]
**Previous State:** [What it was before, if applicable]
**New State:** [What it is now]
**Rationale:** [Why this change/decision was made]
**Affects:** [What systems, processes, or areas this impacts]
**Action Required:** [Any follow-up needed]
```

## WrapSession Protocol

### Purpose
End-of-session cleanup and documentation to ensure clean handoffs and fresh starting points for future work on {{projectName}}.

### When to Use
- End of significant development/planning sessions
- Before switching contexts or team handoffs
- When major work phases are completed
- Before extended breaks from the project

### Protocol Steps

#### 1. Capture Outstanding Decisions/Changes
- Execute **CaptureNote Protocol** for any undocumented major decisions or scope changes from the session
- Focus only on significant decisions, architectural changes, or scope modifications

#### 2. Update Active Work Status
- Update `/docflow/active/focus.md` with:
  - Current work item status
  - Next steps for continuation
  - Any new blockers or dependencies
  - Handoff context for AI assistants

#### 3. Update Task Progress
- Mark completed tasks/features in relevant documentation
- Update priority levels if they've changed
- Document any new tasks discovered during the session

#### 4. Clean Up Development Environment
- Ensure code is in stable state with debug code removed
- Commit any work-in-progress with clear commit messages
- Document any temporary workarounds or incomplete implementations

#### 5. Prepare Session Handoff
- Update `/docflow/active/session.md` with:
  - What was accomplished this session
  - Current state and next priorities
  - Context needed for next session
  - Any important discoveries or insights

#### 6. Final Context Check
- Ensure sufficient context is captured for seamless continuation
- Verify all major decisions are documented
- Confirm next session can start cleanly

### Integration with Development Workflow

#### Daily Development Sessions
1. Start session by reviewing `/docflow/active/focus.md` and latest notes
2. Work on assigned tasks and features
3. Before ending session, run WrapSession protocol for significant changes
4. Update focus document with next session priorities

#### Architecture and Planning Sessions  
1. Capture all major decisions using DECISION RECORD format
2. Document scope changes with impact analysis
3. Record insights about user needs or technical approaches
4. Update core project documentation if fundamental changes occur

#### Handoff Sessions
1. Create comprehensive session handoff in `/docflow/active/session.md`
2. Capture context in notes for future reference
3. Ensure all decisions and changes are documented
4. Provide clear next steps and priorities

## StartSession Protocol

### Purpose
Provide immediate, concise status and next actions when resuming development work on {{projectName}}. No verbose explanations - just essential context.

### When to Use
- Starting a new development session with AI assistants
- Need rapid context switching between tasks
- Want focused, actionable next steps without long explanations

### Usage
**Prompt:** "Execute StartSession protocol - where are we and what's next?"

### Response Format
```markdown
## ðŸŽ¯ Current Status
**Phase:** [Current development phase]
**Priority:** [P0/P1/P2] [Current high-priority task]
**Blockers:** [Any immediate blockers or dependencies]

## âš¡ Next Actions
1. [Immediate next task - specific and actionable]
2. [Secondary task if first is blocked]
3. [Third option/alternative approach]

## ðŸ“‹ Context Check
- [ ] Active focus updated? (/docflow/active/focus.md)
- [ ] Latest notes reviewed? (/docflow/notes/YYYY-MM-DD.md)  
- [ ] Any decisions pending documentation?

## ðŸš¨ Alerts
[Any urgent issues, breaking changes, or critical dependencies]
```

### Implementation Steps
When StartSession is requested:
1. Check `/docflow/active/focus.md` for current priorities
2. Review latest `/docflow/notes/` file for recent decisions
3. Scan `/docflow/releases/current/` for active feature status
4. Identify immediate blockers or dependencies
5. Provide 1-3 specific, actionable next steps

## Quick Reference Commands

### For AI Assistants
**WrapSession System Prompt:**
> "Please refer to WrapSession Protocol in /docflow/project/workflows.md and follow the outlined process for capturing significant session decisions, changes, or insights."

**WrapSession Direct Invocation:**
> "Please execute the WrapSession protocol to capture the key decisions and changes from our current discussion."

**StartSession Direct Invocation:**
> "Execute StartSession protocol - where are we and what's next?"

### Manual Process
1. Check today's date: `YYYY-MM-DD`
2. Open or create `/docflow/notes/YYYY-MM-DD.md`
3. Add timestamped entry using standard format
4. Update cross-references as needed
5. Commit changes to preserve context

---

*These protocols ensure {{projectName}} evolution is systematically captured and enable rapid context switching for efficient development sessions.*