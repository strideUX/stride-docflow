---
description: "Docflow — Workflow Rules (runtime projects)"
globs:
  include:
    - "docflow/**"
    - ".cursor/**"
alwaysApply: true
---
# Docflow Workflow Rules (Runtime)

Modifying this ruleset requires an accepted ADR recorded under docflow/decisions/.

## Workflow Scope
Read/write rules apply only to workflow artifacts:
- docflow/**
- .cursor/**
This ruleset governs how we capture/plan/handoff and how those files are edited. It does not prohibit normal application code edits outside these paths.

## Code Edits Outside Scope
Code changes outside workflow paths are allowed (e.g., src/**, app/**, convex/**). Follow the stack pack standards (see docflow/project/architecture.md → Stack Standards).

## Vocabulary & IDs
- Status: pending → in_progress → in_review → completed
- Types: feature (F###), chore (C###), bug (B###), spike (S###)
- ADR: ADR-YYYY-MM-DD-NN-slug
- Iterations: `docflow/iterations/current/` → archived to `docflow/iterations/NN/` (zero-padded)

## File Topology (authoritative)
- Router:            `docflow/iterations/current/index.md`
- Worklist (truth):  `docflow/iterations/current/features.md`
- Backlog:           `docflow/backlog/features.md`
- Inbox:             `docflow/inbox/capture.md`
- Focus:             `docflow/active/focus.md`
- Session:           `docflow/active/session.md`
- Items:             `docflow/items/<ID>-<slug>.md`
- Bugs:              `docflow/bugs/<ID>-<slug>.md`
- Spikes:            `docflow/spikes/<ID>-<slug>.md`
- Notes:             `docflow/notes/YYYY-MM-DD.md`
- ADRs:              `docflow/decisions/README.md`, `docflow/decisions/<ADR-ID>.md`

> **Invariant**: An item lives either in the backlog or in the current worklist—never both.

## Tokens & Front-matter
- Preserve tokens: `{{PROJECT_NAME}} {{PROJECT_SLUG}} {{OWNER}} {{DATE}} {{ITER_NUM}} {{ID}} {{SLUG}}`
- All docflow files start with valid YAML front-matter; ASCII quotes only.

## Status Machine
- `pending → in_progress → in_review → completed`
- Backsteps: `in_review → in_progress`, `in_progress → pending`
- Spikes: `pending ↔ in_progress ↔ concluded` (spike state is separate; worklist still uses the main statuses as needed)

## Iteration Lifecycle
- **Bootstrap** if `iterations/current/` missing: create
  - `index.md` (iteration.index.v1) with goal/outcomes/acceptance
  - `features.md` (worklist.v1) with empty `items: []`
  - `active/focus.md` and `active/session.md` (focus.v1 / session.v1)
- **Work-in-progress**: keep worklist small; prioritize P0; track `dependencies: [IDs]`.
- **Archive**: move `current/` to `iterations/NN/` and create fresh `current/`.

## IDs
- Next ID per type = max(existing) + 1, zero-padded to 3 digits; never reuse.

## Promotion Policy
- Start inline in worklist/backlog.
- Promote to per-file when:
  - body > ~80–120 lines, or
  - deep context / multiple contributors, or
  - acceptance criteria beyond a short inline block.
- On promotion:
  - create `docflow/items|bugs|spikes/<ID>-<slug>.md`,
  - set `promoted: true` + `file: <relative path>` in the list entry.

## Minimal Spike Policy
- Purpose: exploration container; no timebox required.
- Creation: `docflow/spikes/S###-<slug>.md` + a worklist entry `{ id, type: spike, status, promoted: true, file }`.
- Front-matter: `id, title, state (pending|in_progress|concluded), owner, links: []`.
- Body sections: `# Title`, `## Notes`, `## Recommendation`, `## Follow-ups`.
- Wrap: set `state: concluded`; if applicable create follow-up F###/C### or an ADR.

## Allowed Operations (command-agnostic)
- **Discover**: summarize goals, priorities, blockers (read only).
- **Capture**: append a dated note OR append a new inbox bullet (write).
- **Route**: move an inbox bullet into backlog/worklist OR create a spike + worklist entry (write). **Remove the original inbox bullet after routing.**
- **Plan**: add/update items in worklist or backlog (write).
- **Focus**: set an item active and mark `in_progress` (write).
- **Promote**: create per-file doc and annotate list entry (write).
- **Decide**: create ADR + index entry (write).
- **Handoff**: append session summary (write).
- **Iterate**: bootstrap or archive iteration (write).

## Conflict Resolution
If worklist and a per-item file disagree, **the worklist wins**; sync the per-item file to match.

## Priorities When Summarizing
1) `iterations/current/index.md`  
2) `iterations/current/features.md`  
3) `active/focus.md`  
4) `active/session.md`  
5) per-item files if `promoted: true`  
6) ADRs only if needed for decision context

## Response Contract
**Success**: short summary, paths touched, next 1–3 actions  
**Failure**: what failed, likely cause(s), exact next step

## Safety
- Only touch files in workflow scope.
- Do not introduce new statuses/fields without an ADR.
- If a required file is missing, create the minimal valid file per schema; never silently skip.