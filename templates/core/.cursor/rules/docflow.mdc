⸻

description: “Docflow — Cursor Rules”
globs:
include:
- “docflow/”
- “templates/”
- “.cursor/**”
alwaysApply: true

Docflow Rules (Operation-Based)

Purpose

Standardize edits and responses so the doc-driven workflow is coherent for humans and agents.

Scope

Only read/write inside these roots by default:
- docflow/**
- templates/**
- .cursor/**

Vocabulary
- Status: pending → in_progress → in_review → completed
- IDs: F### feature, C### chore, B### bug, S### spike, ADR-YYYY-MM-DD-NN-slug
- Iterations: docflow/iterations/current/ and numbered archives (01, 02, …)

File Priority (when summarizing)
1. docflow/iterations/current/index.md
2. docflow/iterations/current/features.md
3. docflow/active/focus.md
4. docflow/active/session.md
5. docflow/project/*
6. docflow/decisions/*

Allowed Operations (no command coupling)
- Discover: Summarize current goal, top priorities, blockers.
- Capture: Append a note to docflow/notes/YYYY-MM-DD.md.
- Plan: Add or update items in iterations/current/features.md or backlog/features.md.
- Focus: Set one item as active (update active/focus.md + mark in_progress).
- Promote: Create per-item file (e.g., items/F123-slug.md) and add promoted: true + file: in worklist entry.
- Decide: Create ADR file and index entry.
- Handoff: Append to active/session.md with accomplished/next/blockers.
- Iterate: Bootstrap or archive an iteration (current → NN).

Edit Rules
- Preserve YAML front-matter and tokens like “{{PROJECT_NAME}}”.
- Use the canonical status values.
- Never delete ADR history; supersede with a new ADR if changed.
- Notes are append-only for a given day file.
- If a target file is missing, create it with minimal valid front-matter.

Response Shapes

Success
- One sentence summary
- Paths touched (bulleted)
- Next actions (1–3 bullets)

Failure
- What failed (one sentence)
- Likely cause(s) (bulleted)
- Exact next step

Safety
- Do not modify files outside Scope.
- Do not write binary content.
- Prefer small diffs; avoid mass rewrites unless explicitly requested.

ACCEPTANCE
- Project docs have the “Stack Standards” section once each (if previously missing).
- Next.js + Convex README exists.
- rules/docflow.mdc replaced with the operation-based content above.
- No other files changed.
---
description: "Docflow — Workflow Rules (operation-based)"
globs:
  include:
    - "docflow/**"
    - "templates/**"
    - ".cursor/**"
alwaysApply: true
---
# Docflow Workflow Rules

## Purpose
Provide one, durable source of truth for how work is captured, planned, executed, reviewed, and archived—independent of any specific command, agent, or CLI.

## Scope
Read/write is limited to:
- docflow/**
- templates/**
- .cursor/**
Never modify files outside this scope.

## Vocabulary & IDs
- Status: pending → in_progress → in_review → completed
- Types: feature (F###), chore (C###), bug (B###), spike (S###)
- ADR: ADR-YYYY-MM-DD-NN-slug
- Iterations: `docflow/iterations/current/` then archived as `docflow/iterations/NN/` (zero-padded)

## File Topology (authoritative locations)
- Router:            `docflow/iterations/current/index.md`
- Worklist (truth):  `docflow/iterations/current/features.md`
- Backlog:           `docflow/backlog/features.md`
- Active focus:      `docflow/active/focus.md`
- Session handoff:   `docflow/active/session.md`
- Items (promoted):  `docflow/items/<ID>-<slug>.md`
- Bugs:              `docflow/bugs/<ID>-<slug>.md`
- Spikes:            `docflow/spikes/<ID>-<slug>.md`
- Notes:             `docflow/notes/YYYY-MM-DD.md`
- ADR index/docs:    `docflow/decisions/README.md` + `docflow/decisions/<ADR-ID>.md`

> **Invariant**: An item exists **either** in the backlog **or** in the current worklist—never both.

## Tokens & Front-matter
- Preserve tokens: `{{PROJECT_NAME}} {{PROJECT_SLUG}} {{OWNER}} {{DATE}} {{ITER_NUM}} {{ID}} {{SLUG}}`
- All docflow files must start with valid YAML front-matter; ASCII quotes only.

## Status Machine (allowed transitions)
- `pending → in_progress` (work starts)
- `in_progress → in_review` (developer/agent believes it’s done)
- `in_review → completed` (accepted)
- `in_review → in_progress` (changes requested)
- `in_progress → pending` (explicit de-scope/park)
> Tools **must not** invent other statuses or transitions.

## Iteration Lifecycle
- **Bootstrap**: If `iterations/current/` is missing, create:
  - `index.md` (iteration.index.v1) with goal/outcomes/acceptance
  - `features.md` (worklist.v1) empty list
  - `active/focus.md` + `active/session.md` (focus.v1/session.v1)
- **Work-in-progress**: Keep the worklist small; prioritize P0; mark dependencies `[IDs]`.
- **Archive**: When outcomes are met or a boundary is reached, move `current/` to `iterations/NN/` and create a fresh `current/`.

## ID Allocation
- Next ID for a type is `max(existing IDs of that type) + 1` zero-padded to 3 digits.
- IDs are never reused.

## Promotion Policy
- Start items inline in worklist/backlog.
- **Promote** to a per-file doc when any of:
  - body grows beyond ~80–120 lines,
  - requires deep context or multiple contributors,
  - needs acceptance criteria/DoD beyond a short inline block.
- On promotion:
  - create `docflow/items|bugs|spikes/<ID>-<slug>.md`,
  - add `promoted: true` and `file: <relative path>` to the entry in the worklist/backlog.

## Capture & Handoff
- **Notes**: append bullet with timestamp to `notes/YYYY-MM-DD.md` (create if missing).
- **Focus**: `active/focus.md` states today’s item & next 2–3 steps.
- **Session**: append to `active/session.md` with accomplished/next/blockers (timestamped).

## ADR Policy
- Use ADR for durable design/architecture decisions or tradeoffs.
- Never rewrite history; supersede with a new ADR and mark relationships in both.

## File Integrity Rules
- Never remove YAML front-matter; preserve unknown keys.
- Keep directory trees and code fenced in docs.
- Do not write binary blobs.
- Keep diffs minimal; prefer append/update over wholesale rewrite.

## Priorities When Summarizing ("Where are we?")
1) `iterations/current/index.md` → goals/outcomes
2) `iterations/current/features.md` → status/priority/owners/dependencies
3) `active/focus.md` → today’s focus
4) `active/session.md` → latest blockers/handoff
5) per-item files if `promoted: true`
6) ADRs only if the summary requires decision context

## Allowed Operations (command-agnostic)
- **Discover**: Summarize goals, top priorities, blockers (no writes).
- **Capture**: Append a dated note (write).
- **Plan**: Add/update items in worklist or backlog (write).
- **Focus**: Set an item active and mark `in_progress` (write).
- **Promote**: Create per-file doc and annotate the list entry (write).
- **Decide**: Create ADR and index entry (write).
- **Handoff**: Append session summary (write).
- **Iterate**: Bootstrap or archive iteration (write).

## Response Contract
**Success**
- One sentence summary
- Paths touched (bulleted, relative)
- Next actions (1–3 bullets)

**Failure**
- What failed (one sentence)
- Likely cause(s) (1–2 bullets)
- Exact next step

## Safety
- Only touch files in Scope.
- Do not introduce new statuses/fields without ADR.
- If a required file is missing, create the minimal valid file per schema; never silently skip.
